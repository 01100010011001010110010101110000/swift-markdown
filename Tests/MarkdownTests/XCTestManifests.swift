/*
 This source file is part of the Swift.org open source project

 Copyright (c) 2021 Apple Inc. and the Swift project authors
 Licensed under Apache License v2.0 with Runtime Library Exception

 See https://swift.org/LICENSE.txt for license information
 See https://swift.org/CONTRIBUTORS.txt for Swift project authors
*/

#if !canImport(ObjectiveC)
import XCTest

extension AtomicCounterTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AtomicCounterTests = [
        ("testIncremental", testIncremental),
        ("testSimultaneousFetch", testSimultaneousFetch),
    ]
}

extension BasicBlockContainerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BasicBlockContainerTests = [
        ("testFromSequence", testFromSequence),
        ("testReplacing", testReplacing),
        ("testReplacingChildrenInRange", testReplacingChildrenInRange),
    ]
}

extension BasicInlineContainerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BasicInlineContainerTests = [
        ("testFromSequence", testFromSequence),
        ("testReplacing", testReplacing),
        ("testReplacingChildrenInRange", testReplacingChildrenInRange),
    ]
}

extension CodeBlockTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__CodeBlockTests = [
        ("testCodeBlockCode", testCodeBlockCode),
        ("testCodeBlockLanguage", testCodeBlockLanguage),
    ]
}

extension DocumentTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__DocumentTests = [
        ("testDocumentFromSequence", testDocumentFromSequence),
    ]
}

extension EditPerformanceTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__EditPerformanceTests = [
        ("testChangeTextInDeepTree", testChangeTextInDeepTree),
        ("testChangeTextInWideParagraph", testChangeTextInWideParagraph),
    ]
}

extension HTMLTestsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__HTMLTestsTests = [
        ("testHTMLBlockRawHTML", testHTMLBlockRawHTML),
    ]
}

extension HeadingTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__HeadingTests = [
        ("testLevel", testLevel),
    ]
}

extension HierarchyTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__HierarchyTests = [
        ("testRoot", testRoot),
        ("testRootSelf", testRootSelf),
        ("testTreeAfterLeafChange", testTreeAfterLeafChange),
        ("testTreeAfterMiddleChange", testTreeAfterMiddleChange),
    ]
}

extension IdentifierStabilityTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__IdentifierStabilityTests = [
        ("testStableChildrenIdentifiers", testStableChildrenIdentifiers),
        ("testStableIdentifierOfCopy", testStableIdentifierOfCopy),
    ]
}

extension ImageTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ImageTests = [
        ("testLinkDestination", testLinkDestination),
        ("testLinkFromSequence", testLinkFromSequence),
    ]
}

extension InlineCodeTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__InlineCodeTests = [
        ("testInlineCodeString", testInlineCodeString),
    ]
}

extension InlineHTMLTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__InlineHTMLTests = [
        ("testInlineHTMLRawHTML", testInlineHTMLRawHTML),
    ]
}

extension LineBreakTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LineBreakTests = [
        ("testLineBreak", testLineBreak),
        ("testParseLineBreak", testParseLineBreak),
    ]
}

extension LinkTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LinkTests = [
        ("testLinkDestination", testLinkDestination),
        ("testLinkFromSequence", testLinkFromSequence),
    ]
}

extension ListItemContainerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ListItemContainerTests = [
        ("testOrderedListFromSequence", testOrderedListFromSequence),
        ("testOrderedListReplacingItem", testOrderedListReplacingItem),
        ("testOrderedListReplacingItemsInRange", testOrderedListReplacingItemsInRange),
        ("testOrderedListWithItems", testOrderedListWithItems),
        ("testUnorderedListFromSequence", testUnorderedListFromSequence),
    ]
}

extension MarkupChildrenPerformanceTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MarkupChildrenPerformanceTests = [
        ("testIterateChildrenForward", testIterateChildrenForward),
        ("testIterateChildrenReversed", testIterateChildrenReversed),
    ]
}

extension MarkupRewriterTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MarkupRewriterTests = [
        ("testNullRewriter", testNullRewriter),
        ("testSpecificKindRewrittenEverywhere", testSpecificKindRewrittenEverywhere),
    ]
}

extension MarkupTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MarkupTests = [
        ("testChildCount", testChildCount),
        ("testChildren", testChildren),
        ("testIndexInParent", testIndexInParent),
        ("testParent", testParent),
        ("testRangeParsed", testRangeParsed),
        ("testRangeUnparsed", testRangeUnparsed),
        ("testRoot", testRoot),
    ]
}

extension MarkupTreeDumperTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MarkupTreeDumperTests = [
        ("testDumpEverything", testDumpEverything),
        ("testDumpUniqueIdentifiers", testDumpUniqueIdentifiers),
    ]
}

extension MarkupWalkerTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MarkupWalkerTests = [
        ("testDefaultVisit", testDefaultVisit),
        ("testVisitsEveryElement", testVisitsEveryElement),
    ]
}

extension ParagraphTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ParagraphTests = [
        ("testParagraphDeleting", testParagraphDeleting),
        ("testParagraphInserting", testParagraphInserting),
        ("testParagraphReplacing", testParagraphReplacing),
        ("testParagraphReplacingChildrenInRange", testParagraphReplacingChildrenInRange),
    ]
}

extension RawMarkupToMarkupTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests_RawMarkupToMarkupTests = [
        ("testBlockQuote", testBlockQuote),
        ("testCodeBlock", testCodeBlock),
        ("testCustomBlock", testCustomBlock),
        ("testCustomInline", testCustomInline),
        ("testEmphasis", testEmphasis),
        ("testHeading", testHeading),
        ("testHTMLBlock", testHTMLBlock),
        ("testImage", testImage),
        ("testInlineCode", testInlineCode),
        ("testInlineHTML", testInlineHTML),
        ("testLineBreak", testLineBreak),
        ("testLink", testLink),
        ("testListItem", testListItem),
        ("testOrderedList", testOrderedList),
        ("testParagraph", testParagraph),
        ("testSoftBreak", testSoftBreak),
        ("testStrong", testStrong),
        ("testText", testText),
        ("testThematicBreak", testThematicBreak),
        ("testUnorderedList", testUnorderedList),
    ]
}

extension SoftBreakTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SoftBreakTests = [
        ("testSoftBreak", testSoftBreak),
    ]
}

extension TextTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__TextTests = [
        ("testWithText", testWithText),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(AtomicCounterTests.__allTests__AtomicCounterTests),
        testCase(BasicBlockContainerTests.__allTests__BasicBlockContainerTests),
        testCase(BasicInlineContainerTests.__allTests__BasicInlineContainerTests),
        testCase(CodeBlockTests.__allTests__CodeBlockTests),
        testCase(DocumentTests.__allTests__DocumentTests),
        testCase(EditPerformanceTests.__allTests__EditPerformanceTests),
        testCase(HTMLTestsTests.__allTests__HTMLTestsTests),
        testCase(HeadingTests.__allTests__HeadingTests),
        testCase(HierarchyTests.__allTests__HierarchyTests),
        testCase(IdentifierStabilityTests.__allTests__IdentifierStabilityTests),
        testCase(ImageTests.__allTests__ImageTests),
        testCase(InlineCodeTests.__allTests__InlineCodeTests),
        testCase(InlineHTMLTests.__allTests__InlineHTMLTests),
        testCase(LineBreakTests.__allTests__LineBreakTests),
        testCase(LinkTests.__allTests__LinkTests),
        testCase(ListItemContainerTests.__allTests__ListItemContainerTests),
        testCase(MarkupChildrenPerformanceTests.__allTests__MarkupChildrenPerformanceTests),
        testCase(MarkupRewriterTests.__allTests__MarkupRewriterTests),
        testCase(MarkupTests.__allTests__MarkupTests),
        testCase(MarkupTreeDumperTests.__allTests__MarkupTreeDumperTests),
        testCase(MarkupWalkerTests.__allTests__MarkupWalkerTests),
        testCase(ParagraphTests.__allTests__ParagraphTests),
        testCase(RawMarkupToMarkupTests.__allTests_RawMarkupToMarkupTests),
        testCase(SoftBreakTests.__allTests__SoftBreakTests),
        testCase(TextTests.__allTests__TextTests),
    ]
}
#endif
